{"name":"Programming With Go","lessons":[{"uid":"introduction-to-go","name":"Introduction To Go","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"What is Go? How is it different from Python? Why should you learn it?\n\nYou've got questions, we've got answers.\n","video":{"vimeoId":"677390484","duration":18,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"75035415","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"97968235","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"14723525","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"90496608","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Static Typing","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003estatically typed\u003c/strong\u003e language requires the programmer to\n    specify the type of each variable, either explicitly or implicitly (using\n    something like the \u003cspan\u003e:=\u003c/span\u003e operator in Go). These types are then\n    checked by the compiler before the code is executed. This typically results\n    in less run-time errors as many typing errors are caught at compile time. Go\n    is an example of a statically typed language.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Dynamic Typing","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003edynamically typed\u003c/strong\u003e language does not require the\n    programmer to specify the types of their variables. This is because most\n    type checking is done at run-time, as opposed to compile time. Dynamically\n    typed languages are usually more flexible and allow for variables to change\n    the types they store throughout the program. However, dynamically typed\n    languages are prone to more run-time errors and can often be difficult to\n    debug. Python is an example of a dynamically typed language.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"go-data-types-and-variables","name":"Data Types And Variables","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"In the same way that we compared variables and data types in the Programming Fundamentals section to Pokémon, we can compare variables and data types in this lesson to Pokémon Go. \n\nSorry, we just couldn't resist.\n","video":{"vimeoId":"677390582","duration":22,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"78040263","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"22239481","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"82027987","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"39259071","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"52493276","type":"FITBQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"82848355","type":"FITBQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"8639316","type":"CODING_STANDARD","name":"Constants","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Binary","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eBinary\u003c/strong\u003e is a base 2 numbering system that is used in\n    computers in electronics. Binary numbers are made up of the digits\n    \u003cspan\u003e0\u003c/span\u003e and \u003cspan\u003e1\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bit","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003ebit\u003c/strong\u003e is a single digit in a binary number, having a value\n    of \u003cspan\u003e0\u003c/span\u003e or \u003cspan\u003e1\u003c/span\u003e. The following binary number has\n    \u003cspan\u003e4\u003c/span\u003e bits: \u003cspan\u003e1 0 1 1\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Byte","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003ebyte\u003c/strong\u003e is simply \u003cspan\u003e8\u003c/span\u003e bits of a binary number. A\n    single byte can store up to \u003cspan\u003e256\u003c/span\u003e unique values.\n    \u003cspan\u003ebyte\u003c/span\u003e is also a type in the Go programming language.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"implicit-assignment","name":"Implicit Assignment","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"If the explicit variable declaration style you saw in the previous video seems a little tedious, worry not! Go offers us an elegant alternative that actually happens to be the preferred choice in most situations.\n","video":{"vimeoId":"677390679","duration":7,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"15630845","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"39000658","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"3050755","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"70311327","type":"CODING_STANDARD","name":"Assignment Expression Operator","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Implicit Assignment","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of programming, \u003cstrong\u003eimplicit assignment\u003c/strong\u003e refers\n    to allowing the compiler to infer the type of a variable based on the value\n    that it stores. In Go, you can use the \u003cspan\u003e:=\u003c/span\u003e operator to perform\n    implicit assignment.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Explicit Assignment","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In the context of programming, \u003cstrong\u003eexplicit assignment\u003c/strong\u003e refers\n    to specifying the type of a variable manually using keywords like\n    \u003cspan\u003evar\u003c/span\u003e and \u003cspan\u003econst\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"go-console-output","name":"Console Output","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"As you know by now, the ability to print information to the screen is useful in virtually any programming scenario. In this lesson, we'll take a look at the some of the console-outputting functions that are natively available to us in Go.\n","video":{"vimeoId":"677390761","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"48878480","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"58687651","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"24484614","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"43998359","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"3692244","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"53626349","type":"CODING_STANDARD","name":"Question 6","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"fmt Package","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cspan\u003efmt\u003c/span\u003e package is the \u003cem\u003eformat\u003c/em\u003e package in Go and is\n    used to output text to the console. The \u003cspan\u003efmt\u003c/span\u003e package contains\n    functions like \u003cspan\u003ePrintln()\u003c/span\u003e, \u003cspan\u003ePrintf\u003c/span\u003e and\n    \u003cspan\u003eSprintf\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"go-arithmetic-operators","name":"Arithmetic Operators","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Performing arithmetic in Go is a bit different than it is in Python; there are some important nuances that you must be aware of, so don't skip this video!\n","video":{"vimeoId":"677495958","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"28103800","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"61744821","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"98789844","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"6721601","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"95514432","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Integer Overflow","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In programming, an \u003cstrong\u003einteger overflow\u003c/strong\u003e occurs when an\n    arithmetic operation tries to create a value that is outside of the\n    acceptable range. Take the following as an example:\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003evar result uint8 = 250 + 8\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    This code would result in an overflow because the maximum value that can be\n    stored in a variable of \u003cspan\u003euint8\u003c/span\u003e is \u003cspan\u003e255\u003c/span\u003e and\n    \u003cspan\u003e250 + 8 = 258\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"conditions-and-conditionals","name":"Conditions And Conditionals","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"True or false. If and else. Sound familiar?\n\nThat's because it is. You'll feel right at home using conditional statements in Go.\n","video":{"vimeoId":"677966311","duration":6,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"99538879","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"2638981","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"21973565","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"\u0026\u0026, ||, !","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cspan\u003e\u0026\u0026\u003c/span\u003e, \u003cspan\u003e||\u003c/span\u003e and \u003cspan\u003e!\u003c/span\u003e symbols are the\n    logical operators in Go.\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003e\u0026\u0026\u003c/span\u003e: is the logical \u003cstrong\u003eand\u003c/strong\u003e operator.\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e||\u003c/span\u003e: is the logical \u003cstrong\u003eor\u003c/strong\u003e operator.\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003e!\u003c/span\u003e: is the logical \u003cstrong\u003enot\u003c/strong\u003e operator.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"switch-statement","name":"Switch Statement","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"The switch statement is a nifty method of evaluating expressions that is widely available in most programming languages—Go included. Python, on the other hand, isn't one such programming language, which means this will be a totally new concept for you. Let's dive in!\n","video":{"vimeoId":"677966330","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"15988401","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Switch Statement","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In programming, a \u003cstrong\u003eswitch statement\u003c/strong\u003e is a type of selection\n    control mechanism used to select a specific case to run based on the value\n    of a variable or expression.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003evar a int = 10 \nswitch a {\n    case 10:\n        fmt.Println(\"a is 10\")\n    default:\n        fmt.Println(\"a is not 10\") \n    }\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"looping","name":"Looping (For \u0026 While)","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Just as is the case with conditionals, iteration in Go is conceptually identical to iteration in Python. Take note of the syntactic differences between the two, and you'll be looping through your Go code in no time.\n","video":{"vimeoId":"677966347","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"46708427","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"80113677","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"2547076","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"ASCII","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eASCII\u003c/b\u003e is the abbreviation for\n    \u003cb\u003eAmerican Standard Code for Information Interchange\u003c/b\u003e. This code\n    provides a standard character set for computers where each character on the\n    keyboard is represented by a unique integer.\n  \u003c/p\u003e\n  \u003cp\u003e\n    In Python, you can determine the ASCII code for a character by using the\n    \u003cspan\u003eord()\u003c/span\u003e function and determine the character represented by an\n    integer with the \u003cspan\u003echr()\u003c/span\u003e function. For example,\n    \u003cspan\u003eord('a')\u003c/span\u003e returns \u003cspan\u003e97\u003c/span\u003e and\n    \u003cspan\u003echr(97)\u003c/span\u003e returns \u003cspan\u003e'a'\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"UTF-8","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cstrong\u003eUTF-8\u003c/strong\u003e stands for\n    \u003cstrong\u003eUnicode Transformation Format 8-Bit\u003c/strong\u003e and is a character\n    encoding format widely used on the internet. UTF-8 was designed to extend\n    the older ASCII format and allow for encodings of text containing emojis,\n    Chinese characters and other unique symbols that cannot be represented with\n    ASCII.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"arrays-and-slices","name":"Arrays and Slices","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Similar to Python lists on the surface, but quite different under the hood. Welcome to arrays and slices!\n","video":{"vimeoId":"677966617","duration":29,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"68950880","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"3424437","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"60611065","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"92741701","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Array","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, an \u003cstrong\u003earray\u003c/strong\u003e is a fixed size data structure that stores\n    elements of a single type. The size of an array is part of its type and once\n    an array is created its size cannot change.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003emyArray := [5]int{1, 2, 3, 4, 5} // an integer array of size 5\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Slice","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, a \u003cstrong\u003eslice\u003c/strong\u003e is a dynamically sized, view of the elements\n    of an underlying array. Every slice has a length, capacity, and pointer to\n    an underlying array. Modifying a slice will modify the elements of the\n    underlying array it references. Slices are more flexible than arrays and are\n    commonly used in place of them in Go.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003emySlice := []int{1, 2, 3, 4, 5} // an integer slice of length 5\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"maps","name":"Maps","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"The Go equivalent to Pythonian dictionaries, this data structure functions the same way in both languages. Another easy lesson!\n","video":{"vimeoId":"677975482","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"60691274","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"5142389","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Map","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, a \u003cspan\u003emap\u003c/span\u003e is a data structure that stores key-value pairs,\n    similar to a dictionary in Python.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003emyMap := map[int]string{1: \"hello\", 3: \"world\"}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"structs","name":"Structs","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Go may not have classes like most traditional object-oriented programming languages do, but it does have something that looks like classes, smells like classes, and behaves like classes...\n","video":{"vimeoId":"678415413","duration":17,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"31414383","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"16958426","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Struct","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, a \u003cspan\u003estruct\u003c/span\u003e is a typed collection of fields that can be\n    treated like a custom type (like a class in Python). Structs are useful for\n    grouping data together, they can contain fields and methods.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003etype Person struct {\n    firstName string\n    lastName  string\n    age       int\n} \n\nfunc (p Person) getName() string {\n    return p.firstName + \" \" + p.lastName\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"go-interfaces","name":"Interfaces","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Interfaces can seem a little abstract at first, so make sure you've watched the video in the Objected-Oriented Programming section of ProgrammingExpert before tackling this lesson!\n","video":{"vimeoId":"678415454","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"84975319","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"46809513","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Go Interface","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, an \u003cspan\u003einterface\u003c/span\u003e is a typed collection of method signatures\n    that can be treated like a custom type. Interfaces define a set of methods\n    that any struct that implements the interface must implement.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003etype Pricing interface {\n    getDiscount() float64\n    getTax()      float64\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"error-handling","name":"Error Handling","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Error handling is a scary-sounding topic, but there's no need to panic! \n\nGo will already panic for you anyway.\n","video":{"vimeoId":"678415593","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"31575221","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"96990426","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"10621230","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Panic","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, a \u003cspan\u003epanic\u003c/span\u003e occurs when something unexpected occurs during\n    program execution. Panics occur at run-time and can be triggered using the\n    \u003cspan\u003epanic()\u003c/span\u003e function.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"go-functions","name":"Functions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Functions form the backbone of nearly every program you write. In this lesson, we'll give you some handy tips and tricks that you can use to immediately supercharge your functions—and by extension, your Go programming skills!\n","video":{"vimeoId":"678419356","duration":14,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"89314669","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"64356796","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"52590802","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Variadic Function","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003eIn Go, a \u003cstrong\u003evariadic function\u003c/strong\u003e is a function that accepts a variable number of arguments.\u003c/p\u003e \n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003efunc VariadicFunction(args …int) {\n    // this function accepts any number of integer arguments\n}\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"pointers-and-dereference","name":"Pointers and Reference","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"In order to understand pointers, we must first take a trip down memory lane.\n\nNo, literally. We must delve into the bowels of the computer and examine how its memory works!\n","video":{"vimeoId":"680270215","duration":30,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"59676228","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"11258909","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"43793229","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"66841555","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Pointer","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Go, a \u003cstrong\u003epointer\u003c/strong\u003e is a data type that stores the memory\n    address location of a value. Pointers are represented with an asterisk (*)\n    before the type of the value that they point to (e.g. \u003cspan\u003e*int\u003c/span\u003e is a\n    pointer to an integer). To get a pointer to a value you use the\n    \u003cspan\u003e\u0026\u003c/span\u003e operator, and to deference a pointer you use the\n    \u003cspan\u003e*\u003c/span\u003e operator.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-go\"\u003enum := 1\nvar numPointer *int = \u0026num\n*numPointer = 2\n// num is now equal to 2 \u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"go-routines-and-concurrency","name":"Go Routines and Concurrency","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"If you want to learn how to handle asynchronous tasks in Go, then you'll need to give us your undivided attention as you watch through this video.\n\nIronic, isn't it?\n","video":{"vimeoId":"680270242","duration":39,"annotations":[],"instructor":"Tim Ruscica","thumbnail":""},"questions":[{"uid":"60968551","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"66148153","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"37864713","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"go","arguments":["main.go"],"files":[{"name":"main.go","contents":"// Welcome to our Playground!\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello World!\")\n}","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Goroutine","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cstrong\u003egoroutine\u003c/strong\u003e is a lightweight thread of execution that is\n    managed by the Go runtime. To implement concurrency in Go you can create a\n    goroutine by writing \u003cspan\u003ego functionToRunConcurrently()\u003c/span\u003e. Go\n    routines are much cheaper than running traditional threads and allow for\n    concurrent execution of multiple pieces code at the same time.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false}],"assessment":{"uid":"programming-with-go-programming-assessment","name":"Programming With Go Assessment","questions":[{"uid":"42296100","type":"CODING_STANDARD","name":"Keep Longest And Shortest Word","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"91697651","type":"CODING_STANDARD","name":"Library Books","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"32006702","type":"CODING_STANDARD","name":"Magic Squares","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"8689712","type":"CODING_STANDARD","name":"Multiply Strings Concurrently","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"69270354","type":"CODING_STANDARD","name":"Item Interface","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}]}}
