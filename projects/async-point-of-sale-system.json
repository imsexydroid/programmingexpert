{
    "uid": "async-point-of-sale-system",
    "name": "Asynchronous Point Of Sale System",
    "acl": {
        "isFree": false,
        "isFreeForStudents": false,
        "productRequired": [
            "programmingexpert"
        ],
        "isAvailable": true
    },
    "isPromptPublic": false,
    "prompt": "<div class=\"html\">\n  <p>\n    For this project you'll be asked to create an asynchronous point of\n    sale/checkout system for the ProgrammingExpert Burger Bar. The\n    ProgrammingExpert Burger Bar is a brand-new fast-food restaurant that is\n    exclusively for ProgrammingExpert students. The program you'll create needs\n    to be able to display all the burger bars items and collect customer\n    orders.\n  </p>\n  <p>\n    This restaurant sells three types of items: Burgers, Sides and Drinks.\n    Customers can purchase individual items or combos that are comprised of any\n    burger, side, and drink. All items that are apart of a combo will be\n    discounted by 15%. Your program will need to automatically group items into\n    combos while ensuring that the most expensive items are added to combos\n    first. For example, if a customer were to order the following items:\n  </p>\n  <pre>\n1. Python Burger $5.99\n2. C Burger $4.99\n3. Medium Fries $3.49\n4. Small Fries $2.49\n5. Large Coke $2.99</pre>\n  <p>\n    Then the combo that should be created would include the Python Burger,\n    Medium Fries and Large Coke because those are the most expensive items that\n    can be used to create a combo.\n  </p>\n  <p>\n    For this project you will be provided a class named\n    <span>Inventory</span> that contains the following methods:\n  </p>\n  <ul>\n    <li>\n      <span>get_number_of_items()</span>: An async method that returns the\n      number of unique items in the restaurants catalogue.\n    </li>\n    <li>\n      <span>get_catalogue()</span>: An async method that returns a dictionary\n      containing the restaurants catalogue. This catalogue contains the\n      categories, subcategories (when applicable), names, prices, sizes (when\n      applicable) and ids of items.\n    </li>\n    <li>\n      <span>get_stock(item_id)</span>: An async method that returns the quantity\n      of an item in the inventory based on it's <span>item_id</span>.\n    </li>\n    <li>\n      <span>decrement_stock(item_id)</span>: An async method that decrements the\n      count of an item in the inventory based on it's <span>item_id</span>.\n    </li>\n    <li>\n      <span>get_item(item_id)</span>: An async method that returns the details\n      about a specific item based on it's <span>item_id</span>.\n    </li>\n  </ul>\n  <p>\n    Please experiment with this class to get an idea of the format of the data\n    that is returned and possible errors you may run into. It's important to\n    note that all this classes public methods are async, meaning you will\n    need to use asynchronous programming in this project.\n  </p>\n  <p>\n    To simplify things, we have also provided a\n    <span>display_catalogue(catalogue)</span> function in the\n    <span>main.py</span> file that can be used to output all the items in the\n    catalogue. The ids of items in the inventory will be the same as the item\n    numbers that are displayed by the\n    <span>display_catalogue(catalogue)</span> function.\n  </p>\n  <p>\n    Your program should start by welcoming the customer to the ProgrammingExpert\n    Burger Bar and displaying the catalogue. Next you should collect the\n    customers order by asking them to enter the numbers of items they would like\n    to order (these numbers are displayed by the\n    <span>show_catalogue(catalogue)</span> function before each item). The user\n    should be prompted to enter one item number at a time and have their input\n    validated (i.e., they cannot order an item that doesn't exist). There should\n    also be no delay that causes that user to have to wait before adding another\n    item to their order.\n  </p>\n  <p>\n    Once the user has selected all the items they would like in their order\n    they should be able to place their order by entering <span>\"q\"</span>. At\n    this point the program will need to validate that there is sufficient stock\n    of the items they would like to order and inform them if an item they\n    ordered is out of stock. The process of placing and validating the order\n    should happen as quickly as possible.\n  </p>\n  <p>\n    Once the users order has been placed your program should automatically\n    create any possible combos and display an order summary. This summary should\n    outline each combo and their price as well as all individual item and their\n    prices. Next, your program should display the subtotal, tax and total\n    (subtotal + tax) of this order. For this project, please use a tax rate of 5%\n    for the entire order.\n  </p>\n  <p>\n    Finally, your program needs to ask the user for confirm that they would like\n    to purchase this order. After purchasing or declining to purchase the\n    program should ask them if they would like to order again.\n  </p>\n  <p>\n    See below for some examples of how this program should behave. Please ensure\n    your outputs and prompts match exactly what is seen below.\n  </p>\n</div>\n<div class=\"html\">\n  <h3>Sample Program Execution 1</h3>\n  <pre>\nWelcome to the ProgrammingExpert Burger Bar!\nLoading catalogue...\n--------- Burgers -----------\n\n1. Python Burger $5.99\n2. C Burger $4.99     \n3. Ruby Burger $6.49\n4. Go Burger $5.99\n5. C++ Burger $7.99\n6. Java Burger $7.99\n\n---------- Sides ------------ \n\nFries\n7. Small $2.49\n8. Medium $3.49\n9. Large $4.29\n\nCaesar Salad\n10. Small $3.49\n11. Large $4.49\n\n---------- Drinks ------------\n\nCoke\n12. Small $1.99\n13. Medium $2.49\n14. Large $2.99\n\nGinger Ale\n15. Small $1.99\n16. Medium $2.49\n17. Large $2.99\n\nChocolate Milk Shake\n18. Small $3.99\n19. Medium $4.49\n20. Large $4.99\n\n------------------------------\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: 1\nEnter an item number: 10\nEnter an item number: 20\nEnter an item number: q\nPlacing order...\n\nHere is a summary of your order:\n\n$12.3 Burger Combo\n  Python Burger\n  Small Caesar Salad\n  Large Chocolate Milk Shake\n\nSubtotal: $12.3\nTax: $0.62\nTotal: $12.92\nWould you like to purchase this order for $12.92 (yes/no)? yes\nThank you for your order!\nWould you like to make another order (yes/no)? yes\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: 1\nEnter an item number: 2\nEnter an item number: 3\nEnter an item number: 4\nEnter an item number: 5\nEnter an item number: 6\nEnter an item number: 9\nEnter an item number: 11\nEnter an item number: 12\nEnter an item number: 13\nEnter an item number: 14\nEnter an item number: q\nPlacing order...\n\nHere is a summary of your order:\n\n$13.15 Burger Combo\n  C++ Burger\n  Large Caesar Salad\n  Large Coke\n$12.55 Burger Combo\n  Java Burger\n  Large Fries\n  Medium Coke\n$4.99 C Burger\n$5.99 Go Burger\n$5.99 Python Burger\n$6.49 Ruby Burger\n$1.99 Small Coke\n\nSubtotal: $51.15\nTax: $2.56\nTotal: $53.71\nWould you like to purchase this order for $53.71 (yes/no)? yes\nThank you for your order!\nWould you like to make another order (yes/no)? yes\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: 10\nEnter an item number: 20\nEnter an item number: 19\nEnter an item number: 18\nEnter an item number: -1\nPlease enter a valid number.\nEnter an item number: hello\nPlease enter a valid number.\nEnter an item number: 21\nPlease enter a number below 21.\nEnter an item number: 22\nPlease enter a number below 21.\nEnter an item number: 9\nEnter an item number: q\nPlacing order...\n\nHere is a summary of your order:\n\n$3.49 Small Caesar Salad\n$4.29 Large Fries\n$3.99 Small Chocolate Milk Shake\n$4.49 Medium Chocolate Milk Shake\n$4.99 Large Chocolate Milk Shake\n\nSubtotal: $21.25\nTax: $1.06\nTotal: $22.31\nWould you like to purchase this order for $22.31 (yes/no)? yes\nThank you for your order!\nWould you like to make another order (yes/no)? no\nGoodbye!</pre>\n  <h3>Sample Program Execution 2</h3>\n  <pre>\nWelcome to the ProgrammingExpert Burger Bar!\nLoading catalogue...\n--------- Burgers -----------\n\n1. Python Burger $5.99        \n2. C Burger $4.99\n3. Ruby Burger $6.49\n4. Go Burger $5.99\n5. C++ Burger $7.99\n6. Java Burger $7.99\n\n---------- Sides ------------ \n\nFries\n7. Small $2.49\n8. Medium $3.49\n9. Large $4.29\n\nCaesar Salad\n10. Small $3.49\n11. Large $4.49\n\n---------- Drinks ------------\n\nCoke\n12. Small $1.99\n13. Medium $2.49\n14. Large $2.99\n\nGinger Ale\n15. Small $1.99\n16. Medium $2.49\n17. Large $2.99\n\nChocolate Milk Shake\n18. Small $3.99\n19. Medium $4.49\n20. Large $4.99\n\n------------------------------\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: 1\nEnter an item number: 2\nEnter an item number: 3\nEnter an item number: 7\nEnter an item number: 8\nEnter an item number: 9\nEnter an item number: 9\nEnter an item number: 20\nEnter an item number: 17\nEnter an item number: 14\nEnter an item number: q\nPlacing order...\n\nHere is a summary of your order:\n\n$13.4 Burger Combo\n  Ruby Burger\n  Large Fries\n  Large Chocolate Milk Shake\n$11.28 Burger Combo\n  Python Burger\n  Large Fries\n  Large Coke\n$9.75 Burger Combo\n  C Burger\n  Medium Fries\n  Large Ginger Ale\n$2.49 Small Fries\n\nSubtotal: $36.92\nTax: $1.85\nTotal: $38.77\nWould you like to purchase this order for $38.77 (yes/no)? no\nNo problem, please come again!\nWould you like to make another order (yes/no)? yes\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: q\nPlacing order...\nWould you like to make another order (yes/no)? yes\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: 1\nEnter an item number: q\nPlacing order...\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\nUnfortunately item number 1 is out of stock and has been removed from your order. Sorry!\n\nHere is a summary of your order:\n\n$5.99 Python Burger \n\nSubtotal: $5.99\nTax: $0.3\nTotal: $6.29\nWould you like to purchase this order for $6.29 (yes/no)? yes\nThank you for your order!\nWould you like to make another order (yes/no)? no'\nGoodbye!</pre>\n  <h3>Sample Program Execution 3</h3>\n  <pre>\nWelcome to the ProgrammingExpert Burger Bar!\nLoading catalogue...\n--------- Burgers -----------\n\n1. Python Burger $5.99        \n2. C Burger $4.99\n3. Ruby Burger $6.49\n4. Go Burger $5.99\n5. C++ Burger $7.99\n6. Java Burger $7.99\n\n---------- Sides ------------ \n\nFries\n7. Small $2.49\n8. Medium $3.49\n9. Large $4.29\n\nCaesar Salad\n10. Small $3.49\n11. Large $4.49\n\n---------- Drinks ------------\n\nCoke\n12. Small $1.99\n13. Medium $2.49\n14. Large $2.99\n\nGinger Ale\n15. Small $1.99\n16. Medium $2.49\n17. Large $2.99\n\nChocolate Milk Shake\n18. Small $3.99\n19. Medium $4.49\n20. Large $4.99\n\n------------------------------\n\nPlease enter the number of items that you would like to add to your order. Enter q to complete your order.\nEnter an item number: 6\nEnter an item number: 4\nEnter an item number: 1\nEnter an item number: 11\nEnter an item number: 7\nEnter an item number: 9\nEnter an item number: 14\nEnter an item number: 18\nEnter an item number: q\nPlacing order...\n\nHere is a summary of your order:\n\n$14.0 Burger Combo\n  Java Burger\n  Large Caesar Salad\n  Small Chocolate Milk Shake\n$11.28 Burger Combo\n  Python Burger\n  Large Fries\n  Large Coke\n$5.99 Go Burger\n$2.49 Small Fries\n\nSubtotal: $33.76\nTax: $1.69\nTotal: $35.45\nWould you like to purchase this order for $35.45 (yes/no)? yes\nThank you for your order!\nWould you like to make another order (yes/no)? no\nGoodbye!</pre>\n</div>",
    "promptVideo": {
        "vimeoId": "646998636",
        "duration": 13,
        "annotations": [],
        "instructor": "Tim",
        "thumbnail": ""
    },
    "solutionVideo": {
        "vimeoId": "647011605",
        "duration": 28,
        "annotations": [],
        "instructor": "Tim",
        "thumbnail": ""
    },
    "solutionGithubUrl": "https://github.com/algoexpert-io/async-point-of-sale-system",
    "templateZip": "UEsDBBQAAAAIAACImhOuHVVCXAEAAIYEAAArAAAAYXN5bmMtcG9pbnQtb2Ytc2FsZS1zeXN0ZW0tdGVtcGxhdGUvbWFpbi5wed1UsW7DIBDd+YoT6uAMyQdUylJ16dzRrhCJcXRqjC1wIiWW/71wQEzcROrcG5C593z37gnAtu/MANJe9B471piuBdRnpYfOXAAD+pESjLFaNVCj7Y/yIvZykMfucFLF7Wv1ysDF7mQOyljYwg0p+VtI8i+iWKzVgvDpUxGuDervBf5OOUcgRu92Q8HXKSDWh/UcleYrIjediaLceEle0OoDB9UKrF27AJUc6yjEh5atyjC/zVAnZJ/DtL/HndCGj7HLtIHRl5jgZSTu5ETmI1V6ngDIlHymdTaSN9EPRGbO41i8kreULv0aPcvlVHr0yBTLzSWvseQ1L3nvkgcXHqW+IpoVKH5dkJJdgbA065lht9J/cy0clWe27dRZGXmgOcNB++1dyJeJ+tjAhP5LEx8FXSjG6L0A/xa0EnURb30vrWUMGxDURAjYboEL4TlC8ECKT83GnHQRfl6xH1BLAwQUAAAACAAAiJoThnvHX5kDAADEDwAAMAAAAGFzeW5jLXBvaW50LW9mLXNhbGUtc3lzdGVtLXRlbXBsYXRlL2ludmVudG9yeS5wec1XbW/iOBD+zq+w8qVB7aKG0naLhHR7dLvbVV9WS3XSCaHITQawMDaynfa4qv997SSAE0wCu/fh8iUv9jMzzzMzHiDzBRcKYblkEeENkr0KzGI+bzQaEcVSolv2Akxxsew2kL6Ojo7S+/Ujenh8QveP17c3f6Onr7cD1L/7NBisN6UPMYxRGBJGVBj6Eui4mVkxl3ltRVhhyicJoB56Wy+Zy/szERMQ0uuiYWHBXG8eifVCcII8huegH73vSzXlDGUoTy8sBInMynnr6ur9ZJeJtmWi70B3KtFnFvpH8rx0GLhodSoMdCwDX/jB0Z/b0R8fO/CXlfgLC/8Nv+BdBgr4UdGcNyAxmDS9bXnxbgQBdwatIC61N0n+TYMYzDGltvu2Wz4L/tGC30NMkrmNP6vFX1n4O6zpF9PfLrF3KJBS7WOQWKABpjiuYxycVlGuDzkIqmPuuGIufCnZ964FYbMdSezzGdQyalcxCtxFaOPPKrNYXwVBp0qS9lYRp5I40viFMN0A6BOtp3z+m5Qvfpfy5X9DuT/lEadYAbondIYGU7xHvj9WV3At+atK8p1a8u3T6hZwki+2QGP7KZ1J4QQYCK1HSBTMQ8r5LFmEMYmU3yzulIpHMzO5CDpGQTcfnS1zI0z5OsTgvOlkgdCYC0QQYQY0AZ8CSwdky/iUzea7NUB3x+MaqakBE9SGlvGlJy1M9Bg3Loujt1uIcLUv1DVBIVJED9VeCTFcbRo1ClgyRkQSJhVmEfgOSyeIEqma3S1NUjV04CY6B24bYC4Gr6kkOj5za0V8sfTdeq+2Dr2VdW+kYauXGoxMnguwB87ACdkkYLhB63odGdTqSwEJVIJbDsvpQarUSDm07I7cFg7U9lf1rdbYet+J3k/uTSO9gCDjZdZGJPbHCYusWkx/B6cbXwVeLECk7XWC8u2lqjW1ni0gxtW6q9IjYVtWgYkE9BemCXwWggvfnTrvgWe5eyVqikis53Hu5B3BP7p1pHGkpqBv+c/yltcsNqEAmVClBcCvmChkSJaIlLarRLActbGUf86VyL5vBJqAClkyfwYR8nGqpyyfRZn3/L9FS1KAhR80y/ZLx57Lz/rU2cdDe8tD8eTKHPxRqgSH1zSPOwugxvX+tVFfF79aEy4Z0gCGOXq0lxYxRALm2myNIv8HynYwDr6o10OnXVfx32B9Cm/gLuyHHgrKmj6JAwrKrBxUT9vNYh136xz+BFBLAQIUAxQAAAAIAACImhOuHVVCXAEAAIYEAAArAAAAAAAAAAAAAACkgQAAAABhc3luYy1wb2ludC1vZi1zYWxlLXN5c3RlbS10ZW1wbGF0ZS9tYWluLnB5UEsBAhQDFAAAAAgAAIiaE4Z7x1+ZAwAAxA8AADAAAAAAAAAAAAAAAKSBpQEAAGFzeW5jLXBvaW50LW9mLXNhbGUtc3lzdGVtLXRlbXBsYXRlL2ludmVudG9yeS5weVBLBQYAAAAAAgACALcAAACMBQAAAAA=",
    "solutionZip": "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sbePYuBQXHrQw0b0iYP+nt1uPARn/WEDwdAh+Mif7f2p6/3RkQd/3og/c/Cf8R3eR1DCT8t04Q1JwaTpoWYlvBIE/Bl0nDjX1iT5bZ24WWFKXfMDKx9qwr928F8gJdnKJTg5THDhEFxjLUC5AAaV+D0a2GAvMUgs0A2mOD0Uc3TcFHQLn6Oo2emhz+nSl0pVhO8FYcs9ebzkSzgY0qAppMjWYXNIJ42JbFEJ0bBJlEGtkq0onkx+JEx3AXpLDwd9+q9Bn/1z0OcvE/TlgiecYgXoC6FLdLPALXL+urmMD4d/0Rj+8HD4g+PmRvCGX26EoP7LDqd4DgyEViQmClYx5XyZreOUJKrTLZ+UiidLM8IIOkLRqJiKffMiTHWOe9FpF824QAQRZnbn0KHA7EjsG3LZ7T56KLVNy1sM3f61Xmrbu9m630PftLWWjJs7W8YpPYRhrme28a08lUclobbnYl0nFBJF9LwdVxCT7aFpUMKSGSKSMKkwS6DjYeohSqTqjmrJsrJpx413HlwdYB4G91YS7Z959RO+3jhJ8x2dhFv2cKph28UBjMxuS7CvnIEXskvAZIfWFTw1qO2XEhKoBL8cjtFnqXJAyonDO/UzPFPbv9W3WWNnvRfdTu5dI92BILNN3kYk7cwylji1aPvPHrwXeL0GYdurh4rjlao1tZ5vIMbVU1fZjq7LKjCRgH5imsEHIbjozMKvPE/TPVELRFI9kgu+RwS/dJdIw6kWoF/F3+1+WE5AaSFAZlSZa+QeE4VMbBX/K8dVJliBCmqMxXYhRC7hTp85qJhlq1sQMZ9ZOWX1Ksq92F5pkgKsO1G3yl+5HoMnH8q2ni6eNlYGNSvlyysP5k2lGDxWbSr31kD7/L947vdEXSlky12ZMiNfDezOTAovpq00SiERsNLu/X9KubY94aHxGB17tbjC+j6ut0NbRX22Xo1R5DP1QzyjFs3OXoHb9ZpzWW59+wNQSwECFAMUAAAACAAAiJoT4OQTniEDAAC3CgAALAAAAAAAAAAAAAAApIEAAAAAYXN5bmMtcG9pbnQtb2Ytc2FsZS1zeXN0ZW0tc29sdXRpb24vb3JkZXIucHlQSwECFAMUAAAACAAAiJoTlg+nxw8BAACZAgAALAAAAAAAAAAAAAAApIFrAwAAYXN5bmMtcG9pbnQtb2Ytc2FsZS1zeXN0ZW0tc29sdXRpb24vY29tYm8ucHlQSwECFAMUAAAACAAAiJoTXBHJC4cEAAATDgAAKwAAAAAAAAAAAAAApIHEBAAAYXN5bmMtcG9pbnQtb2Ytc2FsZS1zeXN0ZW0tc29sdXRpb24vbWFpbi5weVBLAQIUAxQAAAAIAACImhMfz/geiAMAAO4PAAAwAAAAAAAAAAAAAACkgZQJAABhc3luYy1wb2ludC1vZi1zYWxlLXN5c3RlbS1zb2x1dGlvbi9pbnZlbnRvcnkucHlQSwUGAAAAAAQABABrAQAAag0AAAAA"
}