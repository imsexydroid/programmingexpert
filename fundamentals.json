{"name":"Programming Fundamentals","lessons":[{"uid":"introduction","name":"Introduction","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"What is Python? What does programming really mean? Where do I even write code?\n\nWe've got answers to all your burning questions!\n","video":{"vimeoId":"648782809","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1307547405-ebbc11c621a11c8c657e013cf1109cc5ef584681ea0bbe04d_640x360?r=pad"},"questions":[{"uid":"868481","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nprint(\"Hello World!\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Python","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003ePython\u003c/b\u003e is a general purpose programming and scripting language that\n    is used by millions of developers around the world. It is one of the most\n    popular programming languages and is extremely versatile. Python is known for\n    being easy to learn and providing simple, yet powerful syntax. Python is\n    most commonly used for:\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003eMachine Learning\u003c/li\u003e\n    \u003cli\u003eArtificial Intelligence\u003c/li\u003e\n    \u003cli\u003eData Science\u003c/li\u003e\n    \u003cli\u003eFinance Applications\u003c/li\u003e\n    \u003cli\u003eWeb Development\u003c/li\u003e\n    \u003cli\u003eScripting\u003c/li\u003e\n    \u003cli\u003eTask Automation\u003c/li\u003e\n  \u003c/ul\u003e\n  \u003cp\u003e\n    To start using Python you need to download it, which you can do this from\n    \u003ca class=\"Link Link--pe\" target=\"_blank\" href=\"https://www.python.org/\"\n      \u003ehere\u003c/a\n    \u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"VSCode","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eVSCode\u003c/b\u003e stands for \u003cb\u003eVisual Studio Code\u003c/b\u003e and is an application\n    that can be used for development and programming purposes. It is one of the\n    most popular IDEs (integrated development environments) and is supported and\n    maintained by Microsoft. VSCode is the IDE used in all ProgrammingExpert\n    videos, you can download it\n    \u003ca\n      class=\"Link Link--pe\"\n      target=\"_blank\"\n      href=\"https://code.visualstudio.com/download\"\n      \u003ehere\u003c/a\n    \u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"data-types","name":"Data Types","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"What do Pokémon and programming data have in common? They both come in a variety of different types!","video":{"vimeoId":"599173763","duration":9,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299574602-10f97b03d2da3f870fcb07b7dd19dca261267d3fd3cba9bc2_640x360?r=pad"},"questions":[{"uid":"795002","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"919482","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"997786","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"789697","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nprint(\"type of 3\", type(3))\n\nprint('type of \"Hello\"', type(\"Hello\"))\n\nprint(\"type of True\", type(True))","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Int","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, the \u003cb\u003eint\u003c/b\u003e data type can represent all integers, positive or\n    negative. \u003cspan\u003e..., -2, -1, 0, 1, 2, ...\u003c/span\u003e are all ints in Python.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Float","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, the \u003cb\u003efloat\u003c/b\u003e data type represents floating point numbers,\n    positive or negative. \u003cspan\u003e-2.1, .2, 7., -90.234, 0.222321, 3.14\u003c/span\u003e are\n    all floats in Python. Even numbers like \u003cspan\u003e2.0\u003c/span\u003e that are whole\n    numbers are considered floats because of the presence of the decimal point\n    (the period).\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"String","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cb\u003estr\u003c/b\u003e data type represents a sequence of characters. In Python,\n    they start and end with \u003cspan\u003e\"\u003c/span\u003e, \u003cspan\u003e'\u003c/span\u003e, \u003cspan\u003e\"\"\"\u003c/span\u003e or\n    \u003cspan\u003e'''\u003c/span\u003e. The following are examples of valid Python strings,\n    \u003cspan\u003e\"hello\", \"2.0\", 'str', \"\"\"False\"\"\", '''true'''\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Bool","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, the \u003cb\u003ebool\u003c/b\u003e data type represents one of two values:\n    \u003cspan\u003eTrue\u003c/span\u003e or \u003cspan\u003eFalse\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"comments","name":"Comments","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Properly documenting your code is just as important as properly writing your code, so make sure to sprinkle your Python with a healthy dose of plain ol' English!","video":{"vimeoId":"600532166","duration":5,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299572850-8e7ec46885264972e9600cfd60956c2ab545e02837dcd63a3_640x360?r=pad"},"questions":[{"uid":"872538","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"540709","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"165625","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"930740","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"110639","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Playground!\n\n# This is a comment.\n\n'''\nThis is a multi-line \ncomment\n'''\n\n\"\"\"\nThis is also a \nmulti-line comment\n\"\"\"","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Comment","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eComments\u003c/b\u003e are parts of the code that usually get ignored by the\n    compiler or interpreter, and that are solely meant to explain or document a\n    section of the program for future maintainers.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"variables-and-printing","name":"Variables and Printing","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Much like a Poké Ball is used to store a single Pokémon, a variable is used to store a singular data value. Who knew Pokémon and programming had so much in common?","video":{"vimeoId":"600542435","duration":18,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299573928-bd32b9f78f8978e874acab690df65857a54fe9597f4408c5b_640x360?r=pad"},"questions":[{"uid":"757453","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"724807","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"733124","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"822991","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"153779","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\na = 1\nb = \"hello\"\nc = True\n\nprint(a, b, c)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Variable","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cb\u003evariable\u003c/b\u003e can be thought of as a container that stores a value. As a\n    programmer you can create your own variables that store different data\n    types. The following is an example of a variable,\n    \u003cspan\u003ehello_world = \"this variable holds a string\"\u003c/span\u003e.\n  \u003c/p\u003e\n  \u003cp\u003eIn Python, variable names must:\u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003eNot start with a number.\u003c/li\u003e\n    \u003cli\u003eNot contain any special characters other than underscores ( _ ).\u003c/li\u003e\n    \u003cli\u003eNot contain any spaces.\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"console-input","name":"Console Input","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"For most software to be useful, it needs to be able to take in some sort of user input. This could be a user's bank account password (so you can steal their money), a user's social security number (so you can steal their identity), or any other kind of input, really. The possibilities are endless!","video":{"vimeoId":"599172310","duration":12,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299575380-2f6d8a36bd66062b1e95bdc1dc64ce8f30fb9c47871aca9b7_640x360?r=pad"},"questions":[{"uid":"590890","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"220587","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\n# Unfortunately, our Python playground doesn't \n# support the `input` function yet. But you can\n# play with most other Python functionality!\n\nprint(\"We're working on it!\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Input","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cspan\u003einput\u003c/span\u003e function is built directly into Python as a means to\n    gather user input from the command line.\n  \u003c/p\u003e\n  \u003cp\u003e\n    An important note is that it will always return a \u003cspan\u003estr\u003c/span\u003e object\n    which will need to be converted to an \u003cspan\u003eint\u003c/span\u003e (for example) if you\n    expect the user input to be an integer.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre\n    class=\"line-numbers\"\n  \u003e\u003ccode class=\"language-python\"\u003euser_name = input(\"What is your name? \")\nprint(\"Hello\", user_name + \"!\")\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"arithmetic-operators","name":"Arithmetic Operators","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Addition. Subtraction. Multiplication. Division. While these concepts are certainly elementary, there are some important nuances between digital arithmetic and its analog counterpart. Let's dive in!","video":{"vimeoId":"600528923","duration":21,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299573017-84324bf0e160bf513f5abccc5b7553648f6130bdacddb25fe_640x360?r=pad"},"questions":[{"uid":"13538","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"590699","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"967612","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"770465","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"128087","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"734262","type":"MCQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"868259","type":"FITBQ","name":"Question 7","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"376696","type":"FITBQ","name":"Question 8","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"693394","type":"FITBQ","name":"Question 9","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"436329","type":"FITBQ","name":"Question 10","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nprint(1 + 1)\n\nprint(\"Hello\" + \" \" + \"World\")\n\na = 8\nb = 3\nprint(a * b)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Operator","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    An \u003cb\u003eoperator\u003c/b\u003e is a symbol that indicates an operation to be performed.\n    \u003cspan\u003e+, -, /, *, **, //\u003c/span\u003e are all operators.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Operand","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    An \u003cb\u003eoperand\u003c/b\u003e is an object that an operator acts on. In the expression\n    \u003cspan\u003e2 + 3\u003c/span\u003e both \u003cspan\u003e2\u003c/span\u003e and \u003cspan\u003e3\u003c/span\u003e are operands while\n    \u003cspan\u003e+\u003c/span\u003e is the operator.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Integer Division","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eInteger division\u003c/b\u003e is division in which the fractional part (remainder)\n    is discarded. In Python, integer division is performed by using the\n    \u003cspan\u003e//\u003c/span\u003e operator. For example, the expression\n    \u003cspan\u003e11 // 3\u003c/span\u003e evaluates to \u003cspan\u003e3\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Modulus","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cb\u003emodulus\u003c/b\u003e (or modulo) is the remainder after dividing one number by\n    another. In Python, modulus is performed by using the\n    \u003cspan\u003e%\u003c/span\u003e operator. For example, the expression\n    \u003cspan\u003e10 % 3\u003c/span\u003e evaluates to \u003cspan\u003e1\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Concatenation","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, \u003cb\u003econcatenation\u003c/b\u003e is the process of combining or adding\n    strings together. Concatenation can be performed using the\n    \u003cspan\u003e+\u003c/span\u003e operator. For example, the expression\n    \u003cspan\u003e\"1\" + \"word\"\u003c/span\u003e evaluates to \u003cspan\u003e\"1word\"\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"type-conversions","name":"Type Conversions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"What do Porygon (the Pokémon) and programming data have in common? They can both convert types!\n\nOkay, okay, we promise we're done with the Pokémon analogies.","video":{"vimeoId":"600540896","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299575183-79fa77fea9fb44ddab09518a0c8a8458acf207da622112c0c_640x360?r=pad"},"questions":[{"uid":"187885","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"721647","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"902961","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"964696","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"361118","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\na = \"42\"\nb = int(a)\n\nprint(a, type(a))\nprint(b, type(b))","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"conditions","name":"Conditions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"True or false.","video":{"vimeoId":"600538954","duration":16,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299573761-00824fa843c03054d0bdbdee87c7d95e27d5738549eb08dba_640x360?r=pad"},"questions":[{"uid":"605740","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"429315","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"124055","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"991734","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"conditions-1","type":"CODING_STANDARD","name":"Conditions 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"conditions-2","type":"CODING_STANDARD","name":"Conditions 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\na = 1\nb = 2\nc = 3\n\nprint(a == 1)\nprint(a == 2)\nprint(a + b == c)\n\nprint(a - b \u003e c)\nprint(a ** b \u003c c)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Condition","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cb\u003econdition\u003c/b\u003e is any expression that evaluates to \u003cspan\u003eTrue\u003c/span\u003e or\n    \u003cspan\u003eFalse\u003c/span\u003e. The expression \u003cspan\u003e2 == 2\u003c/span\u003e evaluates to\n    \u003cspan\u003eTrue\u003c/span\u003e and is considered a condition.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"ASCII","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eASCII\u003c/b\u003e is the abbreviation for\n    \u003cb\u003eAmerican Standard Code for Information Interchange\u003c/b\u003e. This code\n    provides a standard character set for computers where each character on the\n    keyboard is represented by a unique integer.\n  \u003c/p\u003e\n  \u003cp\u003e\n    In Python, you can determine the ASCII code for a character by using the\n    \u003cspan\u003eord()\u003c/span\u003e function and determine the character represented by an\n    integer with the \u003cspan\u003echr()\u003c/span\u003e function. For example,\n    \u003cspan\u003eord('a')\u003c/span\u003e returns \u003cspan\u003e97\u003c/span\u003e and\n    \u003cspan\u003echr(97)\u003c/span\u003e returns \u003cspan\u003e'a'\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"compound-conditions","name":"Compound Conditions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"True or false, but fancier.","video":{"vimeoId":"600532633","duration":25,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299575580-840f7e0179fec7e696e0a7320245e5c6b9ae019fc67ef2e50_640x360?r=pad"},"questions":[{"uid":"848374","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"515328","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"528123","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"180638","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"618409","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"750457","type":"CODING_STANDARD","name":"Question 6","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\na = 1\nb = 2\n\nprint(a == 1)\nprint(not(b == 3))\nprint(a == 1 and b == 3)\nprint(a == 1 or b == 3)\nprint(a == 1 and b == 2)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"And / Or / Not","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    When you want to create larger conditions based on multiple smaller\n    conditions, you will need to use the \u003cspan\u003eand\u003c/span\u003e, \u003cspan\u003eor\u003c/span\u003e,\n    \u003cspan\u003enot\u003c/span\u003e keywords. Conditions that contain these keywords are called\n    \u003cb\u003ecompound conditions\u003c/b\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-python\"\u003eif x == 1 and y == 2:\n  print(\"x is equal to 1 and y is equal to 2\")\nelif not (x == 2 or y == 2):\n  print(\"neither x and y are equal to 2\")\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"De Morgan's Laws","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\u003cb\u003eDe Morgan's laws\u003c/b\u003e state:\u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003enot (x and y) == not x or not y\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003enot (x or y) == not x and not y\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n  \u003cp\u003eYou can use these laws to simplify complex conditions.\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"conditionals","name":"Conditionals","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"This is one of the most important videos in this section, no ifs and \u003cs\u003eelses\u003c/s\u003e buts about it!","video":{"vimeoId":"600536398","duration":15,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299572037-d0500399fbc164d4941e9cd60e96cce998b88a693c8597e04_640x360?r=pad"},"questions":[{"uid":"279027","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"124435","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"199246","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"782333","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"824633","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"626967","type":"CODING_STANDARD","name":"Question 6","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\na = 1\nb = 2\n\nif a == 1:\n    print(\"a is equal to 1\")\n\nif b == 1:\n    print(\"b is equal to 1\")\nelif b == 2:\n    print(\"b is equal to 2\")\nelse:\n    print(\"b is not equal to 1 and not equal to 2\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"if / elif / else","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    When you want to conditionally run a part of your program (depending on the\n    value of a variable, for example) \u003cspan\u003eif\u003c/span\u003e, \u003cspan\u003eelif\u003c/span\u003e, and\n    \u003cspan\u003eelse\u003c/span\u003e statements are necessary:\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-python\"\u003eif x == 1:\n  print(\"If x is equal to 1, then this will be printed!\")\nelif x == 2:\n  print(\"If x is equal to 2, then this will be printed!\")\nelse:\n  print(\"If x isn't equal to 1 or 2, then this will be printed!\")\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"lists","name":"Lists","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"A list, as its name aptly suggests, is a special data type that allows you to store multiple data values. You'll have to watch the video to learn more though; its features and quirks are far too numerous to...list.","video":{"vimeoId":"600756767","duration":22,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299574250-6f674638c97bba03a5d081306da1fcfcf427892cc2704b167_640x360?r=pad"},"questions":[{"uid":"279759","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"48702","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"557848","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"593135","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"65317","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"439091","type":"MCQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"379815","type":"MCQ","name":"Question 7","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"212387","type":"MCQ","name":"Question 8","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"973533","type":"CODING_STANDARD","name":"Question 9","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nlst = [1, 2, 3]\nprint(lst[0])\nprint(lst[1])\nprint(lst[2])\n\nlst = [\"Hello\", \"World\"]\nlst.append(\"!\")\nprint(lst[0], lst[1], lst[2])\n\nprint(len(lst))","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"List","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, a \u003cb\u003elist\u003c/b\u003e is a data type that stores an ordered collection of\n    elements. You can access individual elements in a list using their indices\n    and add elements to a list by using the \u003cspan\u003e.append(item)\u003c/span\u003e method.\n    Example:\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre\n    class=\"line-numbers\"\n  \u003e\u003ccode class=\"language-python\"\u003elst = [1, 10, 4, True, \"str\"]\nlst.append(2)  # lst is now equal to [1, 10, 4, True, \"str\", 2]\nprint(lst[1])  # this outputs 10\nprint(lst[-1])  # this outputs 2\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"In","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cspan\u003ein\u003c/span\u003e keyword in Python lets you check whether a value is\n    contained in a collection (such as a \u003cspan\u003elist\u003c/span\u003e, \u003cspan\u003eset\u003c/span\u003e\n    \u003cspan\u003edict\u003c/span\u003e, etc).\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n\u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-python\"\u003eprint(\"hello\" in [\"hello\", \"world\"]) # True\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cspan\u003ein\u003c/span\u003e keyword can also be used to iterate over the items in a\n    collection when using a \u003cspan\u003efor\u003c/span\u003e loop.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"strings","name":"Strings","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"In the previous video, we hinted at the idea that a string is actually a list of individual characters. If that revelation didn't blow your mind, then this video unfortunately most likely won't either. We promise it'll be informative, though!","video":{"vimeoId":"616425606","duration":20,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299569384-8606d6c744f02f14c93c316e1f87adddbba28f5056d743bc7_640x360?r=pad"},"questions":[{"uid":"765714","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"360346","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"129972","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"965038","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"742021","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nname = \"Tim\"\nprint(name.upper())\nprint(name.lower())\n\ngreeting = \"Hello \" + name\nprint(greeting)\nprint(len(greeting))\n\nif name in greeting:\n    print(\"The name is contained in the greeting!\")\n\nprint(f\"The first character of the name is {name[0]}\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"String","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cb\u003estr\u003c/b\u003e data type represents a sequence of characters. In Python,\n    they start and end with \u003cspan\u003e\"\u003c/span\u003e, \u003cspan\u003e'\u003c/span\u003e, \u003cspan\u003e\"\"\"\u003c/span\u003e or\n    \u003cspan\u003e'''\u003c/span\u003e. The following are examples of valid Python strings,\n    \u003cspan\u003e\"hello\", \"2.0\", 'str', \"\"\"False\"\"\", '''true'''\u003c/span\u003e.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"New Line Character - \\n","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cb\u003enew line character\u003c/b\u003e is a \u003cspan\u003e\\n\u003c/span\u003e. This character is\n    invisible when printed but tells the computer to move the cursor to the next\n    line. For example, \u003cspan\u003eprint(\"hello\\nworld\\n!\")\u003c/span\u003e outputs the\n    following:\n  \u003c/p\u003e\n  \u003cpre\u003ehello\nworld\n!\u003c/pre\n  \u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"tuples","name":"Tuples","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"A tuple, as its name does not aptly suggest, is just a funny-sounding list that can't be modified. No, really, that's all there is to it. Or is it?","video":{"vimeoId":"600762116","duration":8,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299574444-6887c47c557e1cbde5546eaa764ccf5f809b1b607656e930b_640x360?r=pad"},"questions":[{"uid":"513090","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"442127","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"621647","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nt1 = (1, 2)\nt2 = (3, 4, 5, 3)\n\nprint(len(t1), len(t2))\n\nprint(t1.count(3))\nprint(t2.count(3))\n\nprint(t1.index(2))\n\nprint(t1[0])","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Tuple","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    A \u003cb\u003etuple\u003c/b\u003e is similar to a list in that it stores a collection of\n    elements. Like lists you can access individual elements in a tuple using\n    their indices, but you cannot modify or change these elements. Example:\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre\n    class=\"line-numbers\"\n  \u003e\u003ccode class=\"language-python\"\u003etup = (1, 10, 4, True, \"str\")\nprint(tup[1])  # this outputs 10\nprint(tup[-1])  # this outputs \"str\"\ntup[1] = 0  # this raises an exception\ntup.append(1)  # this raises an exception\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"for-loops","name":"For Loops","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"If you aren't already familiar with iteration, then buckle up! For loops might throw you...for a loop.  ( ͡° ͜ʖ ͡°)","video":{"vimeoId":"605013552","duration":35,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299569174-207137025061c193ecea3ccf635649829320f1e3578723925_640x360?r=pad"},"questions":[{"uid":"183505","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"963598","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"517018","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"184289","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"274177","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"889428","type":"CODING_STANDARD","name":"Question 6","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"130376","type":"CODING_STANDARD","name":"Question 7","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"226461","type":"CODING_STANDARD","name":"Question 8","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nnames = [\"Tim\", \"Clement\", \"Antoine\"]\nfor name in names:\n    print(f\"Name in list: {name}\")\n\n\nfor i in range(1, 10, 2):\n    print(f\"i = {i}\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Range","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cspan\u003erange(start, stop, step)\u003c/span\u003e function in Python creates an\n    iterator that returns integers one by one from\n    \u003cspan\u003estart\u003c/span\u003e (inclusive) to \u003cspan\u003estop\u003c/span\u003e (exclusive),\n    incrementing the last value by \u003cspan\u003estep\u003c/span\u003e every time.\n  \u003c/p\u003e\n  \u003cp\u003e\n    The \u003cspan\u003erange\u003c/span\u003e function is commonly used with\n    \u003cspan\u003efor\u003c/span\u003e loops, like so:\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre\n    class=\"line-numbers\"\n  \u003e\u003ccode class=\"language-python\"\u003efor i in range(1, 11, 2):\n    print(i)\n# this loop will output the following:\n# 1\n# 3\n# 5\n# 7\n# 9\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"while-loops","name":"While Loops","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Before diving into this second lesson on iteration, get up, stretch your legs, and grab a glass of water. It's good to take a break once in a while. ( ͡~ ͜ʖ ͡°)","video":{"vimeoId":"605152523","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299572639-4074b3f322f03db2c3b1bbb812a72835385fa0353aad72b32_640x360?r=pad"},"questions":[{"uid":"158936","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"308446","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"73294","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"704901","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\na = 1\nwhile a != 42:\n    print(\"a is still not 42\")\n    a += 1","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"slices","name":"Slices","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"What do pizza cutters, knives, swords, and colons have in common?","video":{"vimeoId":"605158897","duration":9,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299571908-aa529d9f1f15e33e0962c2a7daeb1d2e3fc8744d4c6bda0b5_640x360?r=pad"},"questions":[{"uid":"93994","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"853548","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"690933","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"793488","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"794806","type":"FITBQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"574231","type":"FITBQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"997668","type":"FITBQ","name":"Question 7","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"269870","type":"FITBQ","name":"Question 8","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"948821","type":"CODING_STANDARD","name":"Question 9","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nstudent_names = [\"Tim\", \"Antoine\", \"Clement\", \"Simon\", \"Alex\"]\ngood_students = student_names[:2]\nbad_students = student_names[2:]\n\nreversed_bad_students = bad_students[::-1]\n\nprint(f\"Good students: {good_students}\")\nprint(f\"Bad students: {bad_students}\")\nprint(f\"Reversed Bad students: {reversed_bad_students}\")\n\nbest_student = student_names[0]\nworst_student = student_names[len(student_names) - 1]\n\nprint(f\"Best student: {best_student}\")\nprint(f\"Worst student: {worst_student}\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"dictionaries","name":"Dictionaries","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"A dictionary, as its name somewhat aptly suggests, allows you to store and look up items formatted as key-value pairs, much like a physical dictionary lets you look up words and their associated definition.","video":{"vimeoId":"605161831","duration":24,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299576035-0da409e0095b4a302fd0faa9c74c4597865c0641e03e3f572_640x360?r=pad"},"questions":[{"uid":"277149","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"710528","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"309013","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"53279","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nsalaries = {\n    \"Brad\": 10,\n    \"Lucy\": 12,\n    \"John\": 6.5,\n}\n\nfor name in salaries:\n    salary = salaries[name]\n    print(f\"{name} makes ${salary} an hour\")\n\n\nfor name, salary in salaries.items():\n    weekly_salary = salary * 40\n    print(f\"{name} makes ${weekly_salary} an week\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Dictionary","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, a \u003cb\u003edictionary\u003c/b\u003e (or \u003cspan\u003edict\u003c/span\u003e) is a collection that\n    associates immutable keys with values of any type. For example, the\n    following code creates and accesses a dictionary that stores the age of each\n    person according to their names:\n  \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre class=\"line-numbers\"\u003e\u003ccode class=\"language-python\"\u003eages = {\n  \"Simon\": 27,\n  \"Alex\": 30,\n  \"Clement\": 7,\n}\nprint(\"Alex is\", ages[\"Alex\"], \"years old\")\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"sets","name":"Sets","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Are you getting tired of all these videos about lists, list variants, and list operations? Yeah? Then we've got some bad news...","video":{"vimeoId":"605164562","duration":25,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299573513-691da29a0cc99ae3a859164f773f0c96d71b1826c9ed81d93_640x360?r=pad"},"questions":[{"uid":"479742","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"880212","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"892367","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"329238","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"223979","type":"MCQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"856503","type":"MCQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"876264","type":"MCQ","name":"Question 7","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"423558","type":"CODING_STANDARD","name":"Question 8","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nsentence = (\n    \"This is a regular sentence with words inside. Some words are unique within the sentence, \"\n    + \"while some are duplicates.\"\n)\nwords_with_duplicates = sentence.split(\" \")\nunique_words = set(words_with_duplicates)\n\nprint(words_with_duplicates)\nprint(unique_words)\nprint(f\"The sentence contains {len(unique_words)} unique words, but {len(words_with_duplicates)} words total.\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Set","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    \u003cb\u003eSets\u003c/b\u003e are collections of unique objects. In Python, you can create a\n    new set with \u003cspan\u003emy_set = set()\u003c/span\u003e, add to it with\n    \u003cspan\u003emy_set.add(item)\u003c/span\u003e, and remove items from it with\n    \u003cspan\u003emy_set.remove(item)\u003c/span\u003e.\n  \u003c/p\u003e\n  \u003cp\u003e\n    One important note about sets is that they are not ordered, so iterating\n    through a set is not guaranteed to give you the same result every time.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"exceptions","name":"Exceptions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"When your program runs into an exception, Python is nice enough to stop and generate a nifty little message explaining where the error originated and why it occurred. This can serve as good starting point to then further debug your code. \n\nBegone, digital pests!\n","video":{"vimeoId":"605167532","duration":19,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299572189-a75ce95c6e6b4ac75014b7788f5bac62618e331adad0001a2_640x360?r=pad"},"questions":[{"uid":"693037","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"342698","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"823082","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"247027","type":"MCQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"417157","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\ndigits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\ntry:\n    if len(digits) != 10:\n        raise Exception(\"There should be exactly 10 digits!\")\nexcept Exception as e:\n    print(e)\nfinally:\n    print(\"Goodbye!\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Exception","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n    \u003cp\u003e\n        An \u003cb\u003eexception\u003c/b\u003e, in Python, is \u003cb\u003eraised\u003c/b\u003e when something\n        unexpected happens during the execution of your program. For \n        instance if you try to convert the string \u003cspan\u003e\"hello\"\u003c/span\u003e\n        into an \u003cb\u003einteger\u003c/b\u003e, your program will raise a \u003cspan\u003eValueError\u003c/span\u003e.\n    \u003c/p\u003e\n    \u003cp\u003e\n        If you anticipate that a part of your code might, in some cases, \n        raise an exception, you can surround that part of the code with\n        a \u003cspan\u003etry/except\u003c/span\u003e block and prevent your program from \n        completely crashing. \n    \u003c/p\u003e\n\u003c/div\u003e\n\u003cdiv class=\"code-wrapper prism\"\u003e\n  \u003cpre\n    class=\"line-numbers\"\n  \u003e\u003ccode class=\"language-python\"\u003etry:\n  i = int(\"hello\")\nexcept Exception as e:\n  print(f\"Caught the exception: {e}\")\u003c/code\u003e\u003c/pre\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"functions","name":"Functions","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"A function is like a set of instructions, allowing you to easily invoke a reusable block of code at any given time, and, more generally, to logically organize your program into manageable chunks. Functions are as vital to programming as water is to life!","video":{"vimeoId":"605174651","duration":34,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299574817-ad50b93d55a45bc1bf1a22df050a13d42453a177e1a7d258c_640x360?r=pad"},"questions":[{"uid":"800193","type":"CODING_STANDARD","name":"Question 1","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"55204660","type":"CODING_STANDARD","name":"Question 2","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"98892736","type":"CODING_STANDARD","name":"Question 3","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"21551652","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"55204661","type":"CODING_STANDARD","name":"Question 5","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"98892737","type":"CODING_STANDARD","name":"Question 6","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\ndef add_numbers(a, b):\n    return a + b\n\n\ndef print_stars(n):\n    for i in range(n + 1):\n        print(i * \"*\")\n\n    for i in range(n, -1, -1):\n        print(i * \"*\")\n\n\nprint_stars(add_numbers(4, 3))","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Argument \u0026 Parameter","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The terms \u003cstrong\u003eargument\u003c/strong\u003e and \u003cstrong\u003eparameter\u003c/strong\u003e are frequently\n    used interchangeably. However, strictly speaking, \u003cstrong\u003earguments\u003c/strong\u003e \n    are values that are passed into a function, while \u003cstrong\u003eparameters\u003c/strong\u003e \n    are the values that are read by that function.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"mutability","name":"Mutability","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":true,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"\"The only constant in life is change.\" - Heraclitus\n\"No.\" - Python int, float, str, tuple, bool","video":{"vimeoId":"624769885","duration":31,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299575025-e431ed5c1a8cca5efd6cc62c30ddcc1e41bde18f38b842024_640x360?r=pad"},"questions":[{"uid":"557021","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"805318","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"793987","type":"MCQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"59719010","type":"CODING_STANDARD","name":"Question 4","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nx = [1, 2, 3, 4]\ny = x\ny.append(5)\n\nprint(x)\nprint(y)\nprint(x is y)\n\ny = x[:]\nprint(x is y)\nprint(x == y)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Immutable","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, an \u003cb\u003eimmutable\u003c/b\u003e object is one that cannot be modified once\n    created. The following are examples of immutable data types:\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003eint\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003efloat\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003estr\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003ebool\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003etuple\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"Mutable","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    In Python, a \u003cb\u003emutable\u003c/b\u003e object is one that can be modified once created.\n    The following are examples of mutable data types:\n  \u003c/p\u003e\n  \u003cul\u003e\n    \u003cli\u003e\u003cspan\u003elist\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003eset\u003c/span\u003e\u003c/li\u003e\n    \u003cli\u003e\u003cspan\u003edict\u003c/span\u003e\u003c/li\u003e\n  \u003c/ul\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"scope","name":"Scope","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Much like a monarch's dominion extends only as far as the confines of their kingdom, a variable's relevance extends only as far as the reach of its scope.","video":{"vimeoId":"605176629","duration":13,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299569846-77f1cabe6285ac1c94fea01ad1edfd67ce4dc3ab0d2fb82e0_640x360?r=pad"},"questions":[{"uid":"475344","type":"MCQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"507338","type":"MCQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"649197","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"525939","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"557623","type":"FITBQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"676051","type":"FITBQ","name":"Question 6","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"210810","type":"FITBQ","name":"Question 7","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\n\nname = \"Tim\"\nwas_tim_greeted = False\n\n\ndef say_hello(name):\n    print(f\"Hello {name}\")\n    was_tim_greeted = True\n\n\nsay_hello(name)\n\nif was_tim_greeted:\n    print(\"Tim was greeted!\")\nelse:\n    print(\"The variable was_tim_greeted was out of the scope of say_hello!\")","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"math","name":"Math","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Numbers and programming go hand in hand; you will seldom find yourself writing software that doesn't require at least a little arithmetic. But what if you need to perform some more complex computations?\n\nFear not! Python comes chock-full of math functions and features that are sure to make your life easier, as this video will show you.","video":{"vimeoId":"605176812","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299572476-94f3dcbcbeb1bc68aeed1a015bd0fa627768a5b0ed4513bb5_640x360?r=pad"},"questions":[{"uid":"35722289","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"14396410","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"95700716","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"76316823","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"39021826","type":"FITBQ","name":"Question 5","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nimport math\n\na = 41\nb = 42\n\nprint(\"Max of a and b:\", max(a, b))\nprint(\"Min of a and b:\", min(a, b))\n\nprint(\"Max of 1, 2, 3, 4:\", max([1, 2, 3, 4]))\nprint(\"Min of 1, 2, 3, 4:\", min([1, 2, 3, 4]))\n\nprint(\"Sum of -1, -2, -3, 4:\", sum([-1, -2, -3, 4]))\n\nprint(\"3.14 rounded to the nearest integer:\", round(3.14))\nprint(\"2.78 rounded to the nearest integer:\", round(2.78))\n\nprint(\"Absolute value of -10:\", abs(-10))\n\nprint(\"Highly precise value of pi:\", math.pi)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[{"name":"Standard Library","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n\u003cp\u003e\n    The \u003cb\u003estandard library\u003c/b\u003e of a language are the libraries that the \n    language comes with by default. In Python, this includes modules like\n    \u003cspan\u003eos\u003c/span\u003e, \u003cspan\u003emath\u003c/span\u003e, \u003cspan\u003ethreading\u003c/span\u003e and many \n    more.\n\u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"math Module","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cb\u003emath\u003c/b\u003e module is part of the Python \u003cb\u003estandard library\u003c/b\u003e, and\n    gives you many nice functions that you may need to use in real world\n    programs. For instance, \u003cspan\u003emath.sin(x)\u003c/span\u003e, \u003cspan\u003emath.cos(x)\u003c/span\u003e,\n    \u003cspan\u003emath.tan(x)\u003c/span\u003e and \u003cspan\u003emath.pi\u003c/span\u003e are available from the\n    \u003cspan\u003emath\u003c/span\u003e module.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]},{"name":"random Module","section":null,"definition":"\u003cdiv class=\"html\"\u003e\n  \u003cp\u003e\n    The \u003cb\u003erandom\u003c/b\u003e module is part of the Python \u003cb\u003estandard library\u003c/b\u003e, and\n    provides many functions that you can use to generate random numbers or make\n    random choices. \u003cspan\u003erandom.randint(start,stop)\u003c/span\u003e,\n    \u003cspan\u003erandom.randrange(start, stop, step)\u003c/span\u003e and\n    \u003cspan\u003erandom.choice(iterable)\u003c/span\u003e are a few commonly used functions from\n    the \u003cspan\u003erandom\u003c/span\u003e module.\n  \u003c/p\u003e\n\u003c/div\u003e","url":null,"kinds":[]}],"section":"","hasCodeExample":false},{"uid":"sorting","name":"Sorting","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"It's been a while since we've talked about lists. Let's sort out this issue.","video":{"vimeoId":"605176858","duration":8,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299573646-b351e33f2117b1f9848c0295b5b704ebbcd9b01b0a4ab4f2d_640x360?r=pad"},"questions":[{"uid":"53347125","type":"FITBQ","name":"Question 1","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"54413397","type":"FITBQ","name":"Question 2","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"35091987","type":"FITBQ","name":"Question 3","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null},{"uid":"72932237","type":"FITBQ","name":"Question 4","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"","category":null,"difficulty":null}],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\nstrings = [\"Google\", \"Microsoft\", \"Netflix\", \"Apple\", \"Amazon\"]\nprint(\"Sorted strings:\", sorted(strings, reverse=True))\nprint(\"Unsorted strings:\", strings)\n\nstrings.sort()\nprint(\"Sorted strings:\", strings)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false},{"uid":"misc-python-syntax","name":"Misc. Python Syntax","module":null,"releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"description":"Congratulations! You've made it to the end of our Programming Fundamentals section. In this final video, we'll walk you through some miscellaneous Python arcana that might come in handy on your journey toward programming mastery.","video":{"vimeoId":"605177039","duration":11,"annotations":[],"instructor":"Tim Ruscica","thumbnail":"https://i.vimeocdn.com/video/1299572344-8a722d782abc2587bdd68442344866ca6abf54d426b2ce626_640x360?r=pad"},"questions":[],"references":[],"codeExample":{"runtime":"python","arguments":["main.py"],"files":[{"name":"main.py","contents":"# Welcome to our Python playground!\n\ndigits = [i for i in range(10)]\nprint(digits)\n\neven_numbers = [i for i in range(20) if i % 2 == 0]\nprint(even_numbers)\n\ndivisible_by_3 = {i: i % 3 == 0 for i in range(30)}\nprint(divisible_by_3)\n\nx, y = 13, \"hello\"\nprint(f\"x = {x}, y = {y}\")\n\nx = y = 10\nprint(x, y)","mode":420,"isEditable":true}],"reactConfig":null},"links":[],"preReqs":[],"keyTerms":[],"section":"","hasCodeExample":false}],"assessment":{"uid":"programming-fundamentals-assessment","name":"Programming Fundamentals Assessment","questions":[{"uid":"70970105","type":"CODING_STANDARD","name":"Random Number Guesser","releaseDate":"2021-05-24T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"","difficulty":0},{"uid":"26124210","type":"CODING_STANDARD","name":"Caesar Cipher","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"Programming Fundamentals Assessments","difficulty":1},{"uid":"72907159","type":"CODING_STANDARD","name":"Sort Employees","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"ProgrammingFundamentalsAssessments","difficulty":1},{"uid":"9798585","type":"CODING_STANDARD","name":"Longest Unique Words","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"ProgrammingFundamentalsAssessments","difficulty":1},{"uid":"72292680","type":"CODING_STANDARD","name":"Pairs Sum To Target","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"ProgrammingFundamentalsAssessments","difficulty":1},{"uid":"21841751","type":"CODING_STANDARD","name":"Create Strings From Characters","releaseDate":"0001-01-01T00:00:00Z","acl":{"isFree":false,"isFreeForStudents":false,"productRequired":["programmingexpert"],"isAvailable":true},"instructor":"Tim Ruscica","category":"ProgrammingFundamentalsAssessments","difficulty":1}]}}
